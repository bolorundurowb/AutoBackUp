
// This file has been generated by the GUI designer. Do not modify.
public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;
	private global::Gtk.Action FileAction;
	private global::Gtk.Action btn_add_drive;
	private global::Gtk.Action btn_edit_drives;
	private global::Gtk.Action btn_remove_drives;
	private global::Gtk.VBox vbox1;
	private global::Gtk.MenuBar menubar1;
	private global::Gtk.HPaned hpaned1;
	private global::Gtk.VPaned vpaned1;
	private global::Gtk.Frame frame1;
	private global::Gtk.Alignment GtkAlignment;
	private global::Gtk.TreeView lst_configured_drives;
	private global::Gtk.Label GtkLabel1;
	private global::Gtk.Frame frame2;
	private global::Gtk.Alignment GtkAlignment1;
	private global::Gtk.TreeView lst_drive_specs;
	private global::Gtk.Label GtkLabel2;
	private global::Gtk.Frame frame3;
	private global::Gtk.Alignment GtkAlignment2;
	private global::Gtk.ScrolledWindow GtkScrolledWindow;
	private global::Gtk.NodeView dgv_configured_folders;
	private global::Gtk.Label GtkLabel3;

	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager ();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
		this.FileAction = new global::Gtk.Action ("FileAction", global::Mono.Unix.Catalog.GetString ("File"), null, null);
		this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("File");
		w1.Add (this.FileAction, null);
		this.btn_add_drive = new global::Gtk.Action ("btn_add_drive", global::Mono.Unix.Catalog.GetString ("Configure New Drive"), null, "gtk-new");
		this.btn_add_drive.ShortLabel = global::Mono.Unix.Catalog.GetString ("Configure New Drive");
		w1.Add (this.btn_add_drive, null);
		this.btn_edit_drives = new global::Gtk.Action ("btn_edit_drives", global::Mono.Unix.Catalog.GetString ("Edit Configured Drive"), null, "gtk-edit");
		this.btn_edit_drives.Sensitive = false;
		this.btn_edit_drives.ShortLabel = global::Mono.Unix.Catalog.GetString ("Edit Configured Drive");
		w1.Add (this.btn_edit_drives, null);
		this.btn_remove_drives = new global::Gtk.Action ("btn_remove_drives", global::Mono.Unix.Catalog.GetString ("Remove Drive"), null, "gtk-remove");
		this.btn_remove_drives.Sensitive = false;
		this.btn_remove_drives.ShortLabel = global::Mono.Unix.Catalog.GetString ("Remove Drive");
		w1.Add (this.btn_remove_drives, null);
		this.UIManager.InsertActionGroup (w1, 0);
		this.AddAccelGroup (this.UIManager.AccelGroup);
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString ("Auto BackUp");
		this.Icon = global::Gdk.Pixbuf.LoadFromResource ("AutoBackUp.autobackup.png");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.vbox1 = new global::Gtk.VBox ();
		this.vbox1.Name = "vbox1";
		this.vbox1.Spacing = 6;
		// Container child vbox1.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><menubar name='menubar1'><menu name='FileAction' action='FileAction'><menuitem name='btn_add_drive' action='btn_add_drive'/><menuitem name='btn_edit_drives' action='btn_edit_drives'/><menuitem name='btn_remove_drives' action='btn_remove_drives'/></menu></menubar></ui>");
		this.menubar1 = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/menubar1")));
		this.menubar1.Name = "menubar1";
		this.vbox1.Add (this.menubar1);
		global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.menubar1]));
		w2.Position = 0;
		w2.Expand = false;
		w2.Fill = false;
		// Container child vbox1.Gtk.Box+BoxChild
		this.hpaned1 = new global::Gtk.HPaned ();
		this.hpaned1.CanFocus = true;
		this.hpaned1.Name = "hpaned1";
		this.hpaned1.Position = 180;
		// Container child hpaned1.Gtk.Paned+PanedChild
		this.vpaned1 = new global::Gtk.VPaned ();
		this.vpaned1.CanFocus = true;
		this.vpaned1.Name = "vpaned1";
		this.vpaned1.Position = 173;
		// Container child vpaned1.Gtk.Paned+PanedChild
		this.frame1 = new global::Gtk.Frame ();
		this.frame1.Name = "frame1";
		this.frame1.ShadowType = ((global::Gtk.ShadowType)(0));
		// Container child frame1.Gtk.Container+ContainerChild
		this.GtkAlignment = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
		this.GtkAlignment.Name = "GtkAlignment";
		this.GtkAlignment.LeftPadding = ((uint)(12));
		// Container child GtkAlignment.Gtk.Container+ContainerChild
		this.lst_configured_drives = new global::Gtk.TreeView ();
		this.lst_configured_drives.TooltipMarkup = "Configured Drives";
		this.lst_configured_drives.CanFocus = true;
		this.lst_configured_drives.Name = "lst_configured_drives";
		this.GtkAlignment.Add (this.lst_configured_drives);
		this.frame1.Add (this.GtkAlignment);
		this.GtkLabel1 = new global::Gtk.Label ();
		this.GtkLabel1.Name = "GtkLabel1";
		this.GtkLabel1.LabelProp = global::Mono.Unix.Catalog.GetString ("Configured Drives");
		this.GtkLabel1.UseMarkup = true;
		this.frame1.LabelWidget = this.GtkLabel1;
		this.vpaned1.Add (this.frame1);
		global::Gtk.Paned.PanedChild w5 = ((global::Gtk.Paned.PanedChild)(this.vpaned1 [this.frame1]));
		w5.Resize = false;
		// Container child vpaned1.Gtk.Paned+PanedChild
		this.frame2 = new global::Gtk.Frame ();
		this.frame2.Name = "frame2";
		this.frame2.ShadowType = ((global::Gtk.ShadowType)(0));
		// Container child frame2.Gtk.Container+ContainerChild
		this.GtkAlignment1 = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
		this.GtkAlignment1.Name = "GtkAlignment1";
		this.GtkAlignment1.LeftPadding = ((uint)(12));
		// Container child GtkAlignment1.Gtk.Container+ContainerChild
		this.lst_drive_specs = new global::Gtk.TreeView ();
		this.lst_drive_specs.TooltipMarkup = "Drive Specs";
		this.lst_drive_specs.CanFocus = true;
		this.lst_drive_specs.Name = "lst_drive_specs";
		this.GtkAlignment1.Add (this.lst_drive_specs);
		this.frame2.Add (this.GtkAlignment1);
		this.GtkLabel2 = new global::Gtk.Label ();
		this.GtkLabel2.Name = "GtkLabel2";
		this.GtkLabel2.LabelProp = global::Mono.Unix.Catalog.GetString ("Drive Specs");
		this.frame2.LabelWidget = this.GtkLabel2;
		this.vpaned1.Add (this.frame2);
		this.hpaned1.Add (this.vpaned1);
		global::Gtk.Paned.PanedChild w9 = ((global::Gtk.Paned.PanedChild)(this.hpaned1 [this.vpaned1]));
		w9.Resize = false;
		// Container child hpaned1.Gtk.Paned+PanedChild
		this.frame3 = new global::Gtk.Frame ();
		this.frame3.Name = "frame3";
		this.frame3.ShadowType = ((global::Gtk.ShadowType)(0));
		// Container child frame3.Gtk.Container+ContainerChild
		this.GtkAlignment2 = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
		this.GtkAlignment2.Name = "GtkAlignment2";
		this.GtkAlignment2.LeftPadding = ((uint)(12));
		// Container child GtkAlignment2.Gtk.Container+ContainerChild
		this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow.Name = "GtkScrolledWindow";
		this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
		this.dgv_configured_folders = new global::Gtk.NodeView ();
		this.dgv_configured_folders.TooltipMarkup = "Configured Folders";
		this.dgv_configured_folders.CanFocus = true;
		this.dgv_configured_folders.Name = "dgv_configured_folders";
		this.GtkScrolledWindow.Add (this.dgv_configured_folders);
		this.GtkAlignment2.Add (this.GtkScrolledWindow);
		this.frame3.Add (this.GtkAlignment2);
		this.GtkLabel3 = new global::Gtk.Label ();
		this.GtkLabel3.Name = "GtkLabel3";
		this.GtkLabel3.LabelProp = global::Mono.Unix.Catalog.GetString ("Configured Folders");
		this.frame3.LabelWidget = this.GtkLabel3;
		this.hpaned1.Add (this.frame3);
		this.vbox1.Add (this.hpaned1);
		global::Gtk.Box.BoxChild w14 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.hpaned1]));
		w14.Position = 1;
		this.Add (this.vbox1);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.DefaultWidth = 547;
		this.DefaultHeight = 413;
		this.Show ();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
		this.Shown += new global::System.EventHandler (this.OnShown);
		this.Focused += new global::Gtk.FocusedHandler (this.OnFocused);
		this.btn_add_drive.Activated += new global::System.EventHandler (this.OnBtnAddDriveActivated);
		this.btn_edit_drives.Activated += new global::System.EventHandler (this.OnBtnEditDrivesActivated);
		this.btn_remove_drives.Activated += new global::System.EventHandler (this.OnBtnRemoveDrivesActivated);
	}
}
